--- openbsd_usb.c.orig	Wed Jun  3 15:22:32 2015
+++ openbsd_usb.c	Fri Jun 12 03:00:16 2015
@@ -82,7 +82,7 @@
  */
 static int _errno_to_libusb(int);
 static int _cache_active_config_descriptor(struct libusb_device *);
-static int _sync_control_transfer(struct usbi_transfer *);
+static int _async_control_transfer(struct usbi_transfer *);
 static int _sync_gen_transfer(struct usbi_transfer *);
 static int _access_endpoint(struct libusb_transfer *);
 
@@ -261,6 +261,8 @@
 		usbi_dbg("open %s: fd %d", devnode, dpriv->fd);
 	}
 
+	/* usbdi_add_pollfd(HANDLE_CTX(handle), hpriv->fd, POLLOUT) */
+
 	return (LIBUSB_SUCCESS);
 }
 
@@ -479,7 +481,7 @@
 
 	switch (transfer->type) {
 	case LIBUSB_TRANSFER_TYPE_CONTROL:
-		err = _sync_control_transfer(itransfer);
+		err = _async_control_transfer(itransfer);
 		break;
 	case LIBUSB_TRANSFER_TYPE_ISOCHRONOUS:
 		if (IS_XFEROUT(transfer)) {
@@ -506,9 +508,7 @@
 	if (err)
 		return (err);
 
-	usbi_signal_transfer_completion(itransfer);
-
-	return (LIBUSB_SUCCESS);
+	return (LIBUSB_SUCCESS); // does async return success?
 }
 
 int
@@ -622,7 +622,7 @@
 }
 
 int
-_sync_control_transfer(struct usbi_transfer *itransfer)
+_async_control_transfer(struct usbi_transfer *itransfer)
 {
 	struct libusb_transfer *transfer;
 	struct libusb_control_setup *setup;
@@ -667,6 +667,8 @@
 			close(fd);
 			return _errno_to_libusb(err);
 		}
+		// can we close it if we submitted
+		// asynchronously?
 		close(fd);
 	} else {
 		if ((ioctl(dpriv->fd, USB_SET_TIMEOUT, &transfer->timeout)) < 0)
@@ -675,10 +677,6 @@
 		if ((ioctl(dpriv->fd, USB_DO_REQUEST, &req)) < 0)
 			return _errno_to_libusb(errno);
 	}
-
-	itransfer->transferred = req.ucr_actlen;
-
-	usbi_dbg("transferred %d", itransfer->transferred);
 
 	return (0);
 }
