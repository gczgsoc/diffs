--- ugen.c.orig	Wed Jun  3 14:35:32 2015
+++ ugen.c	Fri Jun  5 15:33:07 2015
@@ -104,6 +104,8 @@
 	u_char sc_secondary;
 };
 
+void ugen_cb(struct usbd_xfer *, void *, ubd_status);
+
 void ugenintr(struct usbd_xfer *xfer, void *addr, usbd_status status);
 void ugen_isoc_rintr(struct usbd_xfer *xfer, void *addr, usbd_status status);
 int ugen_do_read(struct ugen_softc *, int, struct uio *, int);
@@ -130,6 +132,38 @@
 	sizeof(struct ugen_softc), ugen_match, ugen_attach, ugen_detach
 };
 
+/* invoked upon completion of transfer whether successful or
+ * not
+ */
+void ugen_cb(struct usbd_xfer *xfer, void *, ubd_status s) {
+	// if (xfer->status == USBD_NORMAL_COMPLETION)
+	if (ubd_status == USBD_NORMAL_COMPLETION)
+	/* uiomove if a read, if a write then we're done */
+	/* how do I know the xfer was a read? */
+	/* Get the uio that we saved when submitting the transfer */
+	if (ubd_status is complete and it was a read)	
+		error = uiomovei(xfer->buffer, xfer->length, uio);
+	usbd_free_xfer(xfer);
+	/* psignal */
+
+/* for control requests */
+		/* Only if USBD_SHORT_XFER_OK is set. */
+		if (len > ur->ucr_actlen)
+			len = ur->ucr_actlen;
+		if (len != 0) {
+			/* if async, needs to happen in callback */
+			if (uio.uio_rw == UIO_READ) {
+				error = uiomovei(ptr, len, &uio);
+				if (error)
+					goto ret;
+			}
+		}
+	ret:
+		if (ptr)
+			free(ptr, M_TEMP, 0);
+		return (error);
+}
+
 int
 ugen_match(struct device *parent, void *match, void *aux)
 {
@@ -1183,8 +1217,17 @@
 			}
 		}
 		sce = &sc->sc_endpoints[endpt][IN];
-		err = usbd_do_request_flags(sc->sc_udev, &ur->ucr_request,
-			  ptr, ur->ucr_flags, &ur->ucr_actlen, sce->timeout);
+		// err = usbd_do_request_flags(sc->sc_udev, &ur->ucr_request,
+		//           ptr, ur->ucr_flags, &ur->ucr_actlen, sce->timeout);
+		// usbd_status
+		// usbd_request_async(struct usbd_xfer *xfer,
+		//                    usb_device_request_t *req,
+		//                    void *priv, usbd_callback callback)
+		// usbd_request_async_flags doesnt exist?
+		xfer = usbd_alloc_xfer(sc->sc_udev);
+		if (xfer == NULL)
+			return (USBD_NOMEM);
+		err = usbd_request_async(xfer, &ur->ucr_request, NULL, ugen_cb);
 		if (err) {
 			error = EIO;
 			goto ret;
@@ -1193,6 +1236,7 @@
 		if (len > ur->ucr_actlen)
 			len = ur->ucr_actlen;
 		if (len != 0) {
+			/* if async, needs to happen in callback */
 			if (uio.uio_rw == UIO_READ) {
 				error = uiomovei(ptr, len, &uio);
 				if (error)
